# Main Terraform Configuration
# Backend configuration is externalized and managed via ./scripts/init-backend.sh
# Run: ./scripts/init-backend.sh <backend-type> <environment>
# Backend types: local, aws-s3, gcp-gcs, azure-storage

terraform {
  required_version = ">= 1.0"
  
  # Backend configuration is loaded from backend.tf (generated by init-backend.sh)
  # This allows for flexible backend management across different environments
  
  required_providers {
    confluent = {
      source  = "confluentinc/confluent"
      version = "~> 2.35.0"
    }
    # Only uncomment providers when actually using them:
    # - Uncomment aws when secret_backend = "aws_secrets_manager"
    # - Uncomment azurerm when secret_backend = "azure_keyvault"
    # - Uncomment vault when secret_backend = "hashicorp_vault"
    
    # aws = {
    #   source  = "hashicorp/aws"
    #   version = ">= 5.0"
    # }
    # azurerm = {
    #   source  = "hashicorp/azurerm"
    #   version = ">= 3.0"
    # }
    # vault = {
    #   source  = "hashicorp/vault"
    #   version = ">= 3.0"
    # }
  }
}

# Secrets Module - Handles multiple secret backends
module "secrets" {
  source = "./modules/secrets"
  
  secret_backend                = var.secret_backend
  confluent_api_key_env_var     = var.confluent_api_key_env_var
  confluent_api_secret_env_var  = var.confluent_api_secret_env_var
  aws_secret_name               = var.aws_secret_name
  azure_keyvault_name           = var.azure_keyvault_name
  azure_resource_group_name     = var.azure_resource_group_name
  azure_api_key_secret_name     = var.azure_api_key_secret_name
  azure_api_secret_secret_name  = var.azure_api_secret_secret_name
  vault_secret_path             = var.vault_secret_path
  terraform_cloud_api_key       = var.terraform_cloud_api_key
  terraform_cloud_api_secret    = var.terraform_cloud_api_secret
}

provider "confluent" {
  cloud_api_key       = module.secrets.confluent_api_key
  cloud_api_secret    = module.secrets.confluent_api_secret
  kafka_rest_endpoint = var.kafka_rest_endpoint
  kafka_api_key       = var.kafka_api_key
  kafka_api_secret    = var.kafka_api_secret
}

# Optional providers - only configure if using specific secret backends
# Note: Comment out providers you're not using to avoid authentication errors

# provider "aws" {
#   # Uncomment if using AWS Secrets Manager
#   # AWS credentials should be provided via AWS CLI, IAM roles, or environment variables
# }

# provider "azurerm" {
#   # Uncomment if using Azure Key Vault
#   features {}
# }

# provider "vault" {
#   # Uncomment if using HashiCorp Vault
#   # Vault address and token should be provided via environment variables
# } 